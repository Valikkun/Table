import React from 'react'
import {connect} from 'react-redux'
import {sort, select} from 'actions'
import {getTable} from 'selectors'
import R from 'ramda'

const Table = ({sortedId, isReverse, fetching, table, sort, searchValue, selectTr, select}) => {
	const ths = ['id', 'firstName', 'lastName', 'email', 'phone']
	return (
		<div className='table-responsive'>
			<table className='table table-hover'>
				<thead>
					<tr>
						{ths.map((th, index) => 
							<th key={index}>
								<button className={sortedId === th ? 'btn btn-dark' : 'btn btn-outline-dark'}  
										onClick={() => sort(th)}
									   >	
										{isReverse && sortedId === th ? th + ' ↓' : th + ' ↑'}
								</button>
							</th>
						)}
					</tr>
				</thead>
				<tbody>
					{!fetching && table.map((tr, index) => 	
						<tr key={index} 
							onClick={()=>select(tr)}
							className={selectTr === tr ? 'tr selected' : 'tr'}
						   >
							{ths.map((td, index) => 
								<td key={index} 
								   >
									{searchValue && R.contains(searchValue, tr[td]) ? <mark>{tr[td]}</mark> : tr[td]}
								</td>
							)}
						</tr>
					)}
				</tbody>
			</table>
		</div>
	)
}

const mapStateToProps = state => ({
	table: getTable(state),
	sortedId: state.tablePage.sort,
	isReverse: state.tablePage.reverse,
	fetching: state.tablePage.fetching,
	searchValue: state.tablePage.search,
	selectTr: state.tablePage.select,
})

const mapDispatchToProps = {
	sort,
	select,
}

export default connect(mapStateToProps, mapDispatchToProps)(Table)