import React from 'react'
import {connect} from 'react-redux'
import {fetchTable, loadPage, fetchBigTable} from 'actions'
import {getTableLength} from 'selectors'

const Buttons = ({tableLength, activePage, loadPage, fetchBigTable, fetchTable}) => {
	const pages = []
	for (let i = 1; i<=Math.ceil(tableLength/50); i++) { //Считаем необходимое кол-во страниц исходя из длины массива данных
		pages.push(i) 
	}
	return (
		<div>
			<button className='btn btn-warning load-button' onClick={fetchBigTable}>Загрузить много данных</button>
			<button className='btn btn-info  load-button' onClick={fetchTable}>Загрузить мало данных</button>
			<ul className='list-inline'>
				{pages.map((page, index)=> //Для каждой страницы рендерим кнопку 
					<li key={index} 
						className='list-inline-item'>
							<button className={activePage === page ? 'btn btn-secondary  page-button' : 'btn btn-outline-secondary  page-button'}
									onClick={()=>loadPage(page)} 
								   >	
									{page}
							</button>
					</li>)}
			</ul>
		</div>
	)
}

const mapStateToProps = state => ({
	tableLength: getTableLength(state),
	activePage: state.tablePage.page,
})

const mapDispatchToProps = {
	fetchTable,
	fetchBigTable,
	loadPage,
}

export default connect(mapStateToProps, mapDispatchToProps)(Buttons)